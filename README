The MiriTE package contains software developed by the MIRI 
European Consortium software team. The software contained here is 
designed to support the creation and management of the MIRI
calibration data products, support the development of MIRI
simulators and pipeline algorithms and support the development of
STScI JWST pipeline software (while not being part of that
pipeline software).

The software depends on the JWST infrastructure libraries and STScI
ASDF package. JWST documentation can be found in "JDox" articles at

https://jwst-docs.stsci.edu/display/HOM/JWST+User+Documentation+Home


CONTENTS
--------

MiriTools
~~~~~~~~~
Tools and utilities which are used by many MIRI applications.

miri.tools - A collection of general purpose tools and utilities.
See http://miri.ster.kuleuven.be/pub/Public/MIRISim_Public/miri_tools.pdf

miri.datamodels
           - MIRI data models, including two collections:
   .cdp    - Data models supporting MIRI Calibration Data Products
   .sim    - Data models supporting MIRI simulators
See http://miri.ster.kuleuven.be/pub/Public/MIRISim_Public/miri_datamodels.pdf

MiriSimulators
~~~~~~~~~~~~~~
A collection of MIRI data simulators.

miri.simulators
             - One MIRI simulator is installed as part of the MiriTE package:
   .scasim   - The MIRI Sensor Chip Assembly simulator (SCASim)

More general documentation on the MIRI simulators may be found here
http://miri.ster.kuleuven.be/bin/view/Public/MIRISim_Public

The top-level MiriTE directory contains the following top level tools,
utilities and documents:

README       - Read this file first.
LICENCE      - Terms and conditions of use.
setup.py     - Python setup file used to build the MIRI packages
setup.cfg    - Configuration file for commonly used utilities.
miri_installation_check.py
             - Script which checks all packages are installed correctly.
__init__.py  - Initialisation script for a Python source code
               directory. Also contains a package description and version
               control information.


STANDARD DIRECTORY NAMES
------------------------
Software is stored within this repository in a standard directory tree 
consisting of these directories:

data     - Data used by the package
doc      - Documentation for the package
doc/source  - Source directory containing release notes etc...
doc/source/reference  - Contains additional documents referenced from source
scripts  - Scripts and application programs for the package
tests    - Unit tests for the package


INSTALLATION
------------
The recommended way to install the MiriTE package is with the "MIRICLE"
installer, which manages all the package dependencies automatically.
See http://miri.ster.kuleuven.be/bin/view/Public/MirisimInstallation.

The software can also be extracted directly from the

     https://github.com/JWST-MIRI

repository and built and installed manually with the command

   python setup.py install

but in this case the user is responsible for ensuring all other dependent
packages are installed.


TESTING
-------
The unit tests included with the MIRI software can be run from the
top-level directory using nosetests or pytest by running either of
the commands

   nosetests
   pytest
  
from the top-level installation directory. If nosetests complains about
the --with-xcoverage parameter not being recognised, try the command 
 
   conda install nosexcover 

Individual tests can also be run from within the "tests" directory.
For example:

   cd MiriTE/datamodels/tests
   python test_measured_model.py


See the LICENCE file for terms and conditions of use.
